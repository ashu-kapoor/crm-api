/****************
Generated by NODEBOOTSTRAPPER
Author: Ashutosh Kapoor
GIT LINK : https://github.com/ashu-kapoor/NODEBOOTSTRAPPER
****************/
const Opportunity = require("../models/Opportunity");
const User = require("../models/User");
const Contact = require("../models/Contact");
const mongoose = require("mongoose");
/**
 * @param {object} req - req object
 * @param {object} res - res object
 * @param {object} next - next object
 **/

module.exports.createOpportunityController = (req, res, next) => {
  //Opty will be created and contact updated
  const contactId = req.params.contactId;
  Contact.findById(contactId, "_id")
    .then((result) => {
      if (!result) {
        const customError = new Error();
        customError.apiErrorCode = 1600;
        customError.apiData = "contactId";
        throw customError;
      }

      const dbRequest = {
        name: req.body.name,
        stage: req.body.stage,
        products: req.body.products,
        closeDate: req.body.closeDate,
        owner: req.body.owner,
        customer: result._id,
      };

      const description = req.body.description;
      if (description) {
        dbRequest.description = description;
      }

      User.findById(req.body.owner)
        .then((data) => {
          if (!data) {
            const error = new Error();
            error.apiErrorCode = 1600;
            error.apiData = "owner";
            throw error;
          }

          //save opty and update contact as a transaction
          createUpdateOpty(dbRequest, res)
            .then((data) => {
              if (data.isError) {
                const error = new Error("Creation failed");
                error.apiErrorCode = 1000;
                throw error;
              } else {
                return res.status(201).json({
                  id: data.id,
                });
              }
            })
            .catch((err) => {
              throw err;
            });
        })
        .catch((err) => {
          throw err;
        });
    })
    .catch((err) => {
      if (!err.apiErrorCode) {
        err.apiErrorCode = 1000;
      }
      next(err);
    });
};

const createUpdateOpty = async function (optyObject, res) {
  const session = await mongoose.startSession();
  session.startTransaction();
  let isError = false;
  const opty = new Opportunity(optyObject);
  try {
    await opty.save({ session });
    await Contact.findOneAndUpdate(
      { _id: optyObject.customer },
      { $addToSet: { opportunities: opty._id } },
      { session }
    );

    await session.commitTransaction();
  } catch (err) {
    isError = true;
    await session.abortTransaction();
  } finally {
    session.endSession();
  }

  return { id: opty._id, isError };
};
